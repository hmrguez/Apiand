name: Build and Publish CLI

on:
  push:
    tags:
      - 'cli-v*'
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Restore dependencies
        run: dotnet restore ./src/Apiand.Cli/Apiand.Cli.csproj

      - name: Build
        run: dotnet build ./src/Apiand.Cli/Apiand.Cli.csproj --configuration Release --no-restore

      - name: Test
        run: dotnet test --configuration Release --no-build

      - name: Pack
        run: dotnet pack ./src/Apiand.Cli/Apiand.Cli.csproj --configuration Release --no-build --output ./artifacts

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cli-package
          path: ./artifacts/*.nupkg
  
  publish:
    needs: build
    if: startsWith(github.ref, 'refs/tags/cli-v')
    runs-on: ubuntu-latest
    permissions:
      contents: write  
    
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: cli-package
          path: ./artifacts

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/cli-v}" >> $GITHUB_OUTPUT
        
      - name: Extract latest changelog entry
        id: changelog
        run: |
          notes=$(awk '/^## /{if(x) exit; x=1; next} x' $GITHUB_WORKSPACE/CHANGELOG.md)
          echo "notes<<EOF" >> $GITHUB_OUTPUT
          echo "$notes" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./artifacts/*.nupkg
          name: CLI v${{ steps.get_version.outputs.VERSION }}
          body: ${{ steps.changelog.outputs.notes }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to NuGet
        run: dotnet nuget push "./artifacts/*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
